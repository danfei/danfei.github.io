<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>填坑笔记</title>
  
  
  <link href="http://danfei.github.io/atom.xml" rel="self"/>
  
  <link href="http://danfei.github.io/"/>
  <updated>2020-05-30T03:58:31.000Z</updated>
  <id>http://danfei.github.io/</id>
  
  <author>
    <name>danfei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ESP8266笔记</title>
    <link href="http://danfei.github.io/2020/05/30/ESP8266%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/05/30/ESP8266%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-30T03:57:00.000Z</published>
    <updated>2020-05-30T03:58:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="INTERRUPT问题"><a href="#INTERRUPT问题" class="headerlink" title="INTERRUPT问题"></a>INTERRUPT问题</h1><p>提示’ISR NOT IN IRAM!’<br>添加<br>‘void ICACHE_RAM_ATTR handleInterrupt()’<br>at the top.</p><blockquote><p>参考<br><a href="https://www.esp8266.com/viewtopic.php?t=20118">https://www.esp8266.com/viewtopic.php?t=20118</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;INTERRUPT问题&quot;&gt;&lt;a href=&quot;#INTERRUPT问题&quot; class=&quot;headerlink&quot; title=&quot;INTERRUPT问题&quot;&gt;&lt;/a&gt;INTERRUPT问题&lt;/h1&gt;&lt;p&gt;提示’ISR NOT IN IRAM!’&lt;br&gt;添加&lt;br&gt;‘voi</summary>
      
    
    
    
    
    <category term="esp8266" scheme="http://danfei.github.io/tags/esp8266/"/>
    
  </entry>
  
  <entry>
    <title>InfluxDB和Grafana使用笔记</title>
    <link href="http://danfei.github.io/2020/03/19/InfluxDB%E5%92%8CGrafana%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/03/19/InfluxDB%E5%92%8CGrafana%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-19T13:19:16.000Z</published>
    <updated>2020-03-19T16:11:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>HomeAssistant自带的数据库是SQLite<br>可能我加入的十几个传感器采样速度过快，没几天<code>home-assistant_v2.db</code>就400多M了<br>回看历史数据的速度惨不忍睹，经过一番调研决定更换时序型的数据库InfluxDB<br>同时自带的图表实在太简陋，也更换了Grafana</p><h1 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h1><p>在群晖Docker的注册表里搜索并下载<code>influxdb</code><br>在<code>高级设置</code>里勾选<code>启动自动重新启动</code><br>在<code>卷</code>里设置<code>/docker/influxdb</code>映射装载路径<code>/var/lib/influxdb</code><br>在<code>网络</code>里勾选<code>使用与Docker Host相同的网络</code><br>在控制台启动<code>bash</code>，运行<code>influxdb</code><br>创建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE home_assistant</span><br></pre></td></tr></table></figure><p>修改<code>configuration.yaml</code>增加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">influxdb:</span><br><span class="line">    host: 127.0.0.1</span><br></pre></td></tr></table></figure><p>重启服务<br>至此，HomeAssistant数据库切换成功</p><h1 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h1><p>在群晖Docker的注册表里搜索并下载<code>grafana/grafana</code><br>在<code>高级设置</code>里勾选<code>启动自动重新启动</code><br>在<code>卷</code>里设置<code>/docker/grafana</code>映射装载路径<code>/var/lib/grafana</code><br>在<code>网络</code>里勾选<code>使用与Docker Host相同的网络</code><br>注意如果启动失败，可以为文件夹添加权限<br>访问<code>http://群晖IP:3000</code>，用户名密码均为<code>admin</code><br>添加数据源，类型选择<code>InfluxDB</code><br>设置里URL填写<code>http://127.0.0.1:8086</code><br>数据库名称<code>home_assistant</code><br>点击<code>Save &amp; Test</code>，出现<code>Data source is working</code>即可<br>在Dashboard里<br>选择Query的数据库，修改第一行为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">From ppm WHERE entity_id &#x3D; mb_co2</span><br></pre></td></tr></table></figure><p>即可连接数据库，绘制出而二氧化碳的数值曲线<br>可添加多条Query语句<br>最后保存Dashboard</p><blockquote><p>引用<br><a href="https://registry.hub.docker.com/_/influxdb/">https://registry.hub.docker.com/_/influxdb/</a><br><a href="https://registry.hub.docker.com/r/grafana/grafana">https://registry.hub.docker.com/r/grafana/grafana</a><br><a href="https://bbs.hassbian.com/thread-4185-1-1.html">https://bbs.hassbian.com/thread-4185-1-1.html</a><br><a href="https://blog.yxwang.me/2017/10/smart-home-2/">https://blog.yxwang.me/2017/10/smart-home-2/</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;HomeAssistant自带的数据库是SQLite&lt;br&gt;可能我加入的十几个传感器采样速度过快，没几天&lt;code&gt;home-assistant_v2.db&lt;/code&gt;就400多M了&lt;br&gt;回看历史数据的速度惨不忍睹，经过一番调研决定更换时序型的数据库InfluxDB&lt;b</summary>
      
    
    
    
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
    <category term="influxdb" scheme="http://danfei.github.io/tags/influxdb/"/>
    
    <category term="grafana" scheme="http://danfei.github.io/tags/grafana/"/>
    
    <category term="homeassistant" scheme="http://danfei.github.io/tags/homeassistant/"/>
    
  </entry>
  
  <entry>
    <title>盖革计数器笔记</title>
    <link href="http://danfei.github.io/2020/03/18/%E7%9B%96%E9%9D%A9%E8%AE%A1%E6%95%B0%E5%99%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/03/18/%E7%9B%96%E9%9D%A9%E8%AE%A1%E6%95%B0%E5%99%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-17T17:02:08.000Z</published>
    <updated>2020-03-17T17:43:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><p>看了HBO的《切尔诺贝利》之后，觉得是时候重新填坑了<br>把前两年买的盖格计数器翻出来<a href="https://github.com/SensorsIot/Geiger-Counter-RadiationD-v1.1-CAJOE-/">Geiger-Counter-RadiationD-v1.1-CAJOE</a><br>它和NodeMCU连接如下</p><table><thead><tr><th>NodeMCU</th><th>geiger(p3)</th></tr></thead><tbody><tr><td>Vin(5V)</td><td>5V</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>D2(IO4)</td><td>VIN</td></tr></tbody></table><p>加了块OLED显示器，连接如下</p><table><thead><tr><th>NodeMCU</th><th>OLED</th></tr></thead><tbody><tr><td>3V3</td><td>3V3</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>D4(IO2)</td><td>SCL</td></tr><tr><td>D3(IO0)</td><td>SDA</td></tr></tbody></table><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><p>程序如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Thread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;PubSubClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_SSD1306.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_RESET 5</span></span><br><span class="line"><span class="function">Adafruit_SSD1306 <span class="title">display</span><span class="params">(OLED_RESET)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update these with values suitable for your network.</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid = <span class="string">&quot;xxxxx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;xxxxx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* mqtt_server = <span class="string">&quot;192.168.1.110&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* clientID = <span class="string">&quot;espgeiger&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* mqtt_topic = <span class="string">&quot;Home/Global&quot;</span>;</span><br><span class="line"></span><br><span class="line">WiFiClient espClient;</span><br><span class="line"><span class="function">PubSubClient <span class="title">client</span><span class="params">(espClient)</span></span>;</span><br><span class="line"></span><br><span class="line">Thread geigerThread = Thread();</span><br><span class="line"></span><br><span class="line"><span class="comment">//geiger</span></span><br><span class="line"><span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> counts = <span class="number">0</span>;                       <span class="comment">// Tube events</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> cpm = <span class="number">0</span>;                                   <span class="comment">// CPM</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> previousMillis;                            <span class="comment">// Time measurement</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> geigerPin = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> currentMillis = millis();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_PERIOD 30000 <span class="comment">//Logging period in milliseconds</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MINUTE_PERIOD 60000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> ICACHE_RAM_ATTR <span class="title">ISR_impulse</span> <span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ISR_impulse</span><span class="params">()</span> </span>&#123; <span class="comment">// Captures count of events from Geiger counter board</span></span><br><span class="line">  counts++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">geigerCallback</span><span class="params">()</span></span>&#123;</span><br><span class="line">currentMillis = millis();</span><br><span class="line">    <span class="keyword">if</span> (currentMillis - previousMillis &gt; LOG_PERIOD) &#123;</span><br><span class="line"></span><br><span class="line">    previousMillis = currentMillis;</span><br><span class="line">    cpm = counts * MINUTE_PERIOD / LOG_PERIOD;</span><br><span class="line">    counts = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Wire.begin(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">Serial.begin(<span class="number">115200</span>);</span><br><span class="line">pinMode(geigerPin, INPUT);                                                <span class="comment">// Set pin for capturing Tube events</span></span><br><span class="line">interrupts();                                                            <span class="comment">// Enable interrupts</span></span><br><span class="line">attachInterrupt(digitalPinToInterrupt(geigerPin), ISR_impulse, FALLING); <span class="comment">// Define interrupt on falling edge</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> clock1 = millis();</span><br><span class="line">  </span><br><span class="line">geigerThread.onRun(geigerCallback);</span><br><span class="line">geigerThread.setInterval(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">display.begin(SSD1306_SWITCHCAPVCC, <span class="number">0x3C</span>);</span><br><span class="line">  </span><br><span class="line">display.clearDisplay();</span><br><span class="line">display.setTextSize(<span class="number">2</span>);</span><br><span class="line">display.setTextColor(WHITE);</span><br><span class="line">display.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">display.println(<span class="string">&quot;booting&quot;</span>);</span><br><span class="line">display.display();</span><br><span class="line">  </span><br><span class="line">Serial.print(<span class="string">&quot;Connecting to &quot;</span>);</span><br><span class="line">Serial.println(ssid);</span><br><span class="line"></span><br><span class="line">WiFi.begin(ssid, password);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) </span><br><span class="line">&#123;</span><br><span class="line">delay(<span class="number">500</span>);</span><br><span class="line">Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">Serial.println(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">Serial.println(WiFi.localIP());</span><br><span class="line">  </span><br><span class="line">client.setServer(mqtt_server, <span class="number">1883</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reconnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (!client.connected()) &#123;</span><br><span class="line">Serial.print(<span class="string">&quot;AtDHTting MQTT connection...&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (client.connect(clientID)) &#123;</span><br><span class="line">Serial.println(<span class="string">&quot;connected&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Serial.print(<span class="string">&quot;failed, rc=&quot;</span>);</span><br><span class="line">Serial.print(client.state());</span><br><span class="line">Serial.println(<span class="string">&quot; try again in 5 seconds&quot;</span>);</span><br><span class="line">delay(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(geigerThread.shouldRun())</span><br><span class="line">geigerThread.run();</span><br><span class="line">delay(<span class="number">30000</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> (!client.connected()) &#123;</span><br><span class="line">reconnect();</span><br><span class="line">&#125;</span><br><span class="line">client.loop();</span><br><span class="line"><span class="keyword">if</span> (cpm==<span class="number">0</span>) &#123;</span><br><span class="line">Serial.println(<span class="string">&quot;try to read sensor again!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">StaticJsonBuffer&lt;<span class="number">300</span>&gt; JSONbuffer;</span><br><span class="line">JsonObject&amp; JSONencoder = JSONbuffer.createObject(); </span><br><span class="line">JSONencoder[<span class="string">&quot;cpm&quot;</span>] = cpm;</span><br><span class="line"><span class="keyword">float</span> usvh = cpm/<span class="number">151.0</span>;</span><br><span class="line">JSONencoder[<span class="string">&quot;usvh&quot;</span>] = usvh;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">char</span> JSONmessageBuffer[<span class="number">300</span>];</span><br><span class="line">JSONencoder.prettyPrintTo(JSONmessageBuffer, <span class="keyword">sizeof</span>(JSONmessageBuffer));</span><br><span class="line">Serial.println(JSONmessageBuffer);</span><br><span class="line"></span><br><span class="line">boolean isOK = client.publish(mqtt_topic, JSONmessageBuffer, <span class="literal">true</span>);</span><br><span class="line">Serial.println(isOK);</span><br><span class="line">display.clearDisplay();</span><br><span class="line">  </span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">display.setTextSize(<span class="number">2</span>);</span><br><span class="line">display.setTextColor(WHITE);</span><br><span class="line">display.setCursor(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">snprintf</span>(str,<span class="number">16</span>, <span class="string">&quot;cpm=%d&quot;</span>, cpm);</span><br><span class="line">display.println(str);</span><br><span class="line"><span class="built_in">snprintf</span>(str,<span class="number">16</span>, <span class="string">&quot;usvh=%.3f&quot;</span>, usvh);</span><br><span class="line">display.println(str);</span><br><span class="line">display.display();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="修改homeassistantconfiguration-yaml"><a href="#修改homeassistantconfiguration-yaml" class="headerlink" title="修改homeassistantconfiguration.yaml"></a>修改homeassistantconfiguration.yaml</h1><p>编辑<code>/docker/homeassistantconfiguration.yaml</code>在末尾加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sensor:</span><br><span class="line">  - platform: mqtt</span><br><span class="line">    state_topic: &quot;Home&#x2F;Global&quot;</span><br><span class="line">    name: &#39;cpm&#39;</span><br><span class="line">    unit_of_measurement: &#39;cpm&#39;</span><br><span class="line">    value_template: &#39;&#123;&#123; value_json.cpm &#125;&#125;&#39;</span><br><span class="line">  - platform: mqtt</span><br><span class="line">    state_topic: &quot;Home&#x2F;Global&quot;</span><br><span class="line">    name: &#39;usvh&#39;</span><br><span class="line">    unit_of_measurement: &#39;usv&#x2F;h&#39;</span><br><span class="line">    value_template: &#39;&#123;&#123; value_json.usvh &#125;&#125;&#39;</span><br></pre></td></tr></table></figure><p>重启服务即可</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><blockquote><p><a href="https://github.com/SensorsIot/Geiger-Counter-RadiationD-v1.1-CAJOE-/">https://github.com/SensorsIot/Geiger-Counter-RadiationD-v1.1-CAJOE-/</a><br><a href="https://www.youtube.com/watch?v=K28Az3-gV7E&amp;feature=youtu.be">https://www.youtube.com/watch?v=K28Az3-gV7E&amp;feature=youtu.be</a><br><a href="https://zh.wikipedia.org/wiki/%E8%A5%BF%E5%BC%97">https://zh.wikipedia.org/wiki/%E8%A5%BF%E5%BC%97</a><br><a href="https://github.com/SensorsIot/Geiger-Counter-RadiationD-v1.1-CAJOE-/blob/master/Geiger_Counter.ino">https://github.com/SensorsIot/Geiger-Counter-RadiationD-v1.1-CAJOE-/blob/master/Geiger_Counter.ino</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;硬件&quot;&gt;&lt;a href=&quot;#硬件&quot; class=&quot;headerlink&quot; title=&quot;硬件&quot;&gt;&lt;/a&gt;硬件&lt;/h1&gt;&lt;p&gt;看了HBO的《切尔诺贝利》之后，觉得是时候重新填坑了&lt;br&gt;把前两年买的盖格计数器翻出来&lt;a href=&quot;https://github.co</summary>
      
    
    
    
    
    <category term="esp8266" scheme="http://danfei.github.io/tags/esp8266/"/>
    
    <category term="homeassistant" scheme="http://danfei.github.io/tags/homeassistant/"/>
    
    <category term="geiger" scheme="http://danfei.github.io/tags/geiger/"/>
    
  </entry>
  
  <entry>
    <title>TrinityCore笔记</title>
    <link href="http://danfei.github.io/2020/03/12/TrinityCore%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/03/12/TrinityCore%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-12T15:07:58.000Z</published>
    <updated>2020-03-12T15:37:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>在群晖的<code>Virtual Machine Manager</code>里创建新的虚拟机<br>在Debian官网下载镜像(<a href="https://www.debian.org/distrib/">https://www.debian.org/distrib/</a>)<br>建议内存4GB/硬盘40GB</p><h1 id="服务器安装"><a href="#服务器安装" class="headerlink" title="服务器安装"></a>服务器安装</h1><p>最好先安装lnmp</p><blockquote><p>之前的工作看这里</p></blockquote><ul><li><a href="/2020/03/12/LNMP%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/" title="LNMP安装笔记">LNMP安装笔记</a>接着做环境准备<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install git clang cmake make gcc g++ libmariadbclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev libboost-all-dev p7zip-full</span><br><span class="line">$ sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;cc cc &#x2F;usr&#x2F;bin&#x2F;clang 100</span><br><span class="line">$ sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;c++ c++ &#x2F;usr&#x2F;bin&#x2F;clang 100</span><br></pre></td></tr></table></figure>下载3.3.5源码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;</span><br><span class="line">$ git clone -b 3.3.5 git:&#x2F;&#x2F;github.com&#x2F;TrinityCore&#x2F;TrinityCore.git</span><br></pre></td></tr></table></figure>配置<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cmake ..&#x2F; -DCMAKE_INSTALL_PREFIX&#x3D;&#x2F;home&#x2F;wow&#x2F;server</span><br></pre></td></tr></table></figure></li><li>DTOOLS=0 是不编译地图提取工具的选项<br>编译<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure>后续可以拉取git代码更新<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;TrinityCore&#x2F;</span><br><span class="line">$ git pull origin 3.3.5</span><br></pre></td></tr></table></figure><h1 id="服务器设置"><a href="#服务器设置" class="headerlink" title="服务器设置"></a>服务器设置</h1>上传客户端到<code>~/wow_client</code><br>提取DBC和Maps<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;wow_client&#x2F;</span><br><span class="line">$ &#x2F;home&#x2F;wow&#x2F;server&#x2F;bin&#x2F;mapextractor</span><br><span class="line">$ mkdir &#x2F;home&#x2F;wow&#x2F;server&#x2F;data</span><br><span class="line">$ cp -r dbc maps &#x2F;home&#x2F;wow&#x2F;server&#x2F;data</span><br></pre></td></tr></table></figure>提取vmaps（可选）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;wow_client&#x2F;</span><br><span class="line">$ &#x2F;home&#x2F;wow&#x2F;server&#x2F;bin&#x2F;vmap4extractor</span><br><span class="line">$ mkdir vmaps</span><br><span class="line">$ &#x2F;home&#x2F;wow&#x2F;server&#x2F;bin&#x2F;vmap4assembler Buildings vmaps</span><br><span class="line">$ cp -r vmaps &#x2F;home&#x2F;wow&#x2F;server&#x2F;data</span><br></pre></td></tr></table></figure>提取mmaps（可选，我用了6个多小时）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;wow_client&#x2F;</span><br><span class="line">$ mkdir mmaps</span><br><span class="line">$ &#x2F;home&#x2F;wow&#x2F;server&#x2F;bin&#x2F;mmaps_generator</span><br><span class="line">$ cp -r mmaps &#x2F;home&#x2F;wow&#x2F;server&#x2F;data</span><br></pre></td></tr></table></figure>拷贝配置文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;server&#x2F;etc&#x2F;</span><br><span class="line">$ cp worldserver.conf.dist worldserver.conf</span><br><span class="line">$ cp authserver.conf.dist authserver.conf</span><br></pre></td></tr></table></figure>编辑worldserver.conf<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataDir &#x3D; &quot;..&#x2F;data&quot;</span><br></pre></td></tr></table></figure>还有数据库配置（帐号wow，密码trinity）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LoginDatabaseInfo &#x3D; &quot;127.0.0.1;3306;wow;trinity;auth&quot; #worldserver.conf</span><br><span class="line">WorldDatabaseInfo &#x3D; &quot;127.0.0.1;3306;wow;trinity;world&quot; #worldserver.conf</span><br><span class="line">CharacterDatabaseInfo &#x3D; &quot;127.0.0.1;3306;wow;trinity;characters&quot; #worldserver.conf</span><br></pre></td></tr></table></figure>编辑authserver.conf<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoginDatabaseInfo &#x3D; &quot;127.0.0.1;3306;trinity;trinity;auth&quot;</span><br></pre></td></tr></table></figure><h1 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE &#96;world&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">CREATE DATABASE &#96;characters&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">CREATE DATABASE &#96;auth&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;world&#96; . * TO &#39;wow&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;characters&#96; . * TO &#39;wow&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;auth&#96; . * TO &#39;wow&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>这三个数据库的说明如下<blockquote><p>auth - holds account data - usernames, passwords, GM access, realm information, etc.<br>characters - holds character data - created characters, inventory, bank items, auction house, tickets, etc.<br>world - holds game-experience content such as NPCs, quests, objects, etc<br>hotfixes (master only) - holds fixes not already added to the core or other official databases.</p></blockquote></li></ul><p>下载最新的数据库文件(<a href="https://github.com/TrinityCore/TrinityCore/releases">https://github.com/TrinityCore/TrinityCore/releases</a>)<br>把它放在<code>server/bin</code>目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;server&#x2F;bin&#x2F;</span><br><span class="line">$ wget https:&#x2F;&#x2F;github.com&#x2F;TrinityCore&#x2F;TrinityCore&#x2F;releases&#x2F;download&#x2F;TDB335.20021&#x2F;TDB_full_world_335.20021_2020_02_15.7z</span><br><span class="line">$ 7z x TDB_full_world_335.20021_2020_02_15.7z</span><br><span class="line">$ rm TDB_full_world_335.20021_2020_02_15.7z</span><br><span class="line">$ .&#x2F;worldserver </span><br></pre></td></tr></table></figure><p>执行结束，数据库导入完成</p><h1 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h1><p>修改本机客户端文件<code>\Data\zhCN\realmlist.wtf</code>，改为服务器地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set realmlist xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><p>修改数据库<code>auth</code>表<code>realmlist</code></p><ul><li><code>name</code>是服务器名称</li><li><code>address</code>是服务器地址</li><li><code>gamebuild</code>是客户端版本号（客户端启动时左下角可见）</li></ul><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>启动服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;server&#x2F;bin&#x2F;</span><br><span class="line">$ .&#x2F;authserver &amp;</span><br><span class="line">$ .&#x2F;worldserver</span><br></pre></td></tr></table></figure><p>创建帐号并设置为gm（3级权限）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">account create user password</span><br><span class="line">account set gmlevel userid 3 1</span><br></pre></td></tr></table></figure><p>如果要和朋友一起玩，就映射一个域名上去<br>frp映射好本地服务器的<code>3724</code>和<code>8085</code>端口<br>frp服务器开对应的防火墙端口即可</p><p>gm指令请惠存<br>(<a href="https://trinitycore.atlassian.net/wiki/spaces/tc/pages/2130065/GM+Commands">https://trinitycore.atlassian.net/wiki/spaces/tc/pages/2130065/GM+Commands</a>)</p><p>优秀插件<br>(<a href="https://rochet2.github.io/downloads/">https://rochet2.github.io/downloads/</a>)</p><blockquote><p>引用<br><a href="https://trinitycore.atlassian.net/wiki/spaces/tc/pages/2130077/Installation+Guide">https://trinitycore.atlassian.net/wiki/spaces/tc/pages/2130077/Installation+Guide</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;在群晖的&lt;code&gt;Virtual Machine Manager&lt;/code&gt;里创建新的虚拟机&lt;br&gt;在Debian官网下</summary>
      
    
    
    
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
    <category term="trinitycore" scheme="http://danfei.github.io/tags/trinitycore/"/>
    
    <category term="wow" scheme="http://danfei.github.io/tags/wow/"/>
    
  </entry>
  
  <entry>
    <title>LNMP安装笔记</title>
    <link href="http://danfei.github.io/2020/03/12/LNMP%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/03/12/LNMP%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-11T16:14:30.000Z</published>
    <updated>2020-03-11T16:43:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装Nginx </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># apt update </span><br><span class="line"># apt install nginx </span><br></pre></td></tr></table></figure><p>控制服务状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># systemctl start nginx</span><br><span class="line"># systemctl restart nginx </span><br><span class="line"># systemctl stop nginx</span><br><span class="line"># systemctl reload nginx </span><br><span class="line"># systemctl status nginx </span><br></pre></td></tr></table></figure><p>安装MariaDB</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt install mariadb-server</span><br></pre></td></tr></table></figure><p>安全配置全部Yes</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mysql_secure_installation</span><br></pre></td></tr></table></figure><p>安装PHP-FPM (Fast Process Manager)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt install php-fpm php-mysqli</span><br></pre></td></tr></table></figure><p>查看启动状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl status php7.3-fpm</span><br></pre></td></tr></table></figure><p>修改PHP-FPM配置文件<code>/etc/php/7.3/fpm/php.ini</code><br>取消如下内容的注释，并改为0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cgi.fix_pathinfo&#x3D;0</span><br></pre></td></tr></table></figure><p>修改Nginx配置文件<code>/etc/nginx/sites-available/default</code><br>取消如下内容的注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">            include snippets&#x2F;fastcgi-php.conf;</span><br><span class="line">            fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.3-fpm.sock;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时添加主页<code>index.php</code><br>重启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># systemctl restart php7.3-fpm</span><br><span class="line"># systemctl restart nginx</span><br></pre></td></tr></table></figure><p>在<code>/var/www/html/</code>下编写测试页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>测试正常后继续<br>下载phpMyAdmin，并解压到<code>/var/www/html/</code>目录下<br>进入mysql命令行创建phpmyadmin用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#39;phpmyadmin&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;phpmyadmin&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>使用phpmyadmin登录成功即可</p><blockquote><p>引用<br><a href="https://www.tecmint.com/install-lemp-on-debian-10-server/">https://www.tecmint.com/install-lemp-on-debian-10-server/</a><br><a href="https://www.centos.bz/2017/07/mysql5-7-phpmyadmin-access-denied-for-user-rootlocalhost/">https://www.centos.bz/2017/07/mysql5-7-phpmyadmin-access-denied-for-user-rootlocalhost/</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装Nginx &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span</summary>
      
    
    
    
    
    <category term="debian" scheme="http://danfei.github.io/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>在KiCad5中使用FreeRouting</title>
    <link href="http://danfei.github.io/2020/03/11/%E5%9C%A8KiCad5%E4%B8%AD%E4%BD%BF%E7%94%A8FreeRouting/"/>
    <id>http://danfei.github.io/2020/03/11/%E5%9C%A8KiCad5%E4%B8%AD%E4%BD%BF%E7%94%A8FreeRouting/</id>
    <published>2020-03-11T12:44:09.000Z</published>
    <updated>2020-03-11T14:37:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>升级了新版的KiCad5，感觉好用很多<br>我布线多用FreeRouter<del>因为人工智能终究会取代我们</del><br>新版的FreeRouting打包在<a href="https://layouteditor.com/">LayoutEditor</a>这款软件里<br>下载程序压缩包后，提取其中的<code>freeRouting.jar</code></p><p>我是在Ubuntu上运行Kicad的<br>所以还需要安装OpenJava的运行环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install default-jre</span><br></pre></td></tr></table></figure><p>只要在pcbnew里面导出.DSN文件<br><code>File → Export → Specctra DSN</code><br>导入到FreeRouting中，布好线之后再导出.SES文件<br>再次导入到pcbnew程序里即可<br><code>File → Import → Spectra Session</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;升级了新版的KiCad5，感觉好用很多&lt;br&gt;我布线多用FreeRouter&lt;del&gt;因为人工智能终究会取代我们&lt;/del&gt;&lt;br&gt;新版的FreeRouting打包在&lt;a href=&quot;https://layouteditor.com/&quot;&gt;LayoutEditor&lt;/a&gt;这款</summary>
      
    
    
    
    
    <category term="kicad" scheme="http://danfei.github.io/tags/kicad/"/>
    
  </entry>
  
  <entry>
    <title>二氧化碳传感器使用笔记</title>
    <link href="http://danfei.github.io/2020/03/09/%E4%BA%8C%E6%B0%A7%E5%8C%96%E7%A2%B3%E4%BC%A0%E6%84%9F%E5%99%A8%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/03/09/%E4%BA%8C%E6%B0%A7%E5%8C%96%E7%A2%B3%E4%BC%A0%E6%84%9F%E5%99%A8%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-09T14:16:05.000Z</published>
    <updated>2020-03-09T14:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>这是一款攀藤科技的二氧化碳传感器 <a href="http://www.plantower.com/content/?99.html">链接</a> <a href="http://www.plantower.com/upload/ueditor/image/20170329/14907552666040083.jpg">图片</a></p><blockquote><p>DS-CO2-20 是一款基于非分光红外吸收原理的数字式二氧化碳浓度传感器，可连续采集并计算单位体积内空气中的二氧化碳浓度，并以通用数字接口形式输出。<br>本传感器可嵌入各种与二氧化碳浓度相关的仪器仪表或环境改善设备，为其提供及时准确的浓度数据。</p></blockquote><h1 id="硬件部分"><a href="#硬件部分" class="headerlink" title="硬件部分"></a>硬件部分</h1><p>它的针脚是2mm间距，接口朝下俯视角从左到右分别是pin1到pin7，需要注意的是5V供电</p><table><thead><tr><th>管脚</th><th>标号</th><th>说明</th></tr></thead><tbody><tr><td>pin1</td><td>VCC</td><td>5V</td></tr><tr><td>pin2</td><td>GND</td><td></td></tr><tr><td>pin3</td><td>RXD</td><td>TTL_3.3V</td></tr><tr><td>pin4</td><td>TXD</td><td>TTL_3.3V</td></tr><tr><td>pin5</td><td>RESET</td><td>TTL_3.3V</td></tr><tr><td>pin6</td><td>NC</td><td></td></tr><tr><td>pin7</td><td>NC</td><td></td></tr></tbody></table><p>把NodeMCU和它连接使用，接法如下</p><table><thead><tr><th>NodeMCU</th><th>DS-CO2-20</th></tr></thead><tbody><tr><td>Vin(5V)</td><td>VCC</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>D5(IO14)</td><td>RXD</td></tr><tr><td>D6(IO12)</td><td>TXD</td></tr></tbody></table><h1 id="软件部分"><a href="#软件部分" class="headerlink" title="软件部分"></a>软件部分</h1><p>通讯方式是串口通讯，默认波特率：9600bps，校验位：无，停止位：1 位<br>通讯协议是应答式，主机发送<code>0x42, 0x4d, 0xe3, 0x00, 0x00, 0x01, 0x72</code><br>其中前两位是特征字节，第三位是指令字节，最后两位是校验字节</p><p>从机应答格式协议长度为12字节，从<code>0x42, 0x4d</code>开始二氧化碳数值的高低八位分别在第5、6位<br>最后两位是校验字节</p><p>程序如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Thread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">Thread CO2Thread = Thread();</span><br><span class="line"><span class="function">SoftwareSerial <span class="title">CO2sensor</span><span class="params">(<span class="number">14</span>, <span class="number">12</span>, <span class="literal">false</span>, <span class="number">128</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CO2</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> CO2ppm = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> CO2AskData[<span class="number">7</span>] = &#123;<span class="number">0x42</span>, <span class="number">0x4d</span>, <span class="number">0xe3</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x72</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">panteng</span> &#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> len[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> co2_cf[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> d[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> crc_cf[<span class="number">2</span>];</span><br><span class="line">&#125; panteng;</span><br><span class="line"><span class="keyword">char</span> crc1,crc2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CO2Callback</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> state = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    CO2sensor.write(CO2AskData, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (CO2sensor.available()) &#123;</span><br><span class="line">        c = CO2sensor.read();</span><br><span class="line"><span class="comment">//Serial.print(c,HEX);</span></span><br><span class="line">        <span class="keyword">switch</span> (state) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0x42</span> == c)</span><br><span class="line">                    state = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0x4d</span> == c) &#123;</span><br><span class="line">                    state = <span class="number">2</span>;</span><br><span class="line">                    count = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                </span><br><span class="line">((<span class="keyword">unsigned</span> <span class="keyword">char</span> *) &amp;panteng)[count++] = c;         </span><br><span class="line"><span class="keyword">if</span> (count &gt; <span class="number">12</span>) &#123;</span><br><span class="line">                    state = <span class="number">0</span>;</span><br><span class="line">                    </span><br><span class="line">crc1 = panteng.crc_cf[<span class="number">0</span>] * <span class="number">256</span> + panteng.crc_cf[<span class="number">1</span>];</span><br><span class="line">                    crc2 =  <span class="number">0x42</span> + <span class="number">0x4d</span> + panteng.len[<span class="number">0</span>]+ panteng.len[<span class="number">1</span>]+panteng.co2_cf[<span class="number">0</span>]+panteng.co2_cf[<span class="number">1</span>]+panteng.d[<span class="number">0</span>]+panteng.d[<span class="number">1</span>]+panteng.d[<span class="number">2</span>]+panteng.d[<span class="number">3</span>];</span><br><span class="line">                    </span><br><span class="line"><span class="comment">//Serial.print(&quot;crc1 = &quot;);Serial.println(crc1,HEX);</span></span><br><span class="line"><span class="comment">//Serial.print(&quot;crc2 = &quot;);Serial.println(crc2,HEX);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (crc1 == crc2)&#123;</span><br><span class="line">CO2ppm = panteng.co2_cf[<span class="number">0</span>] * <span class="number">256</span> + panteng.co2_cf[<span class="number">1</span>];</span><br><span class="line">Serial.print(<span class="string">&quot;co2 = &quot;</span>);Serial.print(CO2ppm);Serial.println(<span class="string">&quot; ppm&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">  CO2Thread.onRun(CO2Callback);</span><br><span class="line">  CO2Thread.setInterval(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  CO2sensor.begin(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(CO2Thread.shouldRun())</span><br><span class="line">    CO2Thread.run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;这是一款攀藤科技的二氧化碳传感器 &lt;a href=&quot;http://www.plantower.com/content/?99.html&quot;&gt;链</summary>
      
    
    
    
    
    <category term="DIY" scheme="http://danfei.github.io/tags/DIY/"/>
    
    <category term="sensor" scheme="http://danfei.github.io/tags/sensor/"/>
    
  </entry>
  
  <entry>
    <title>添加传感器到HomeAssistant</title>
    <link href="http://danfei.github.io/2020/03/08/%E6%B7%BB%E5%8A%A0%E4%BC%A0%E6%84%9F%E5%99%A8%E5%88%B0HomeAssistant/"/>
    <id>http://danfei.github.io/2020/03/08/%E6%B7%BB%E5%8A%A0%E4%BC%A0%E6%84%9F%E5%99%A8%E5%88%B0HomeAssistant/</id>
    <published>2020-03-07T17:54:32.000Z</published>
    <updated>2020-03-09T16:07:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前的工作看这里</p></blockquote><ul><li><a href="/2020/03/03/%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BAHomeAssistant%E8%BF%9E%E6%8E%A5HomeKit/" title="群晖搭建HomeAssistant连接HomeKit">群晖搭建HomeAssistant连接HomeKit</a></li></ul><h1 id="修改homeassistantconfiguration-yaml"><a href="#修改homeassistantconfiguration-yaml" class="headerlink" title="修改homeassistantconfiguration.yaml"></a>修改homeassistantconfiguration.yaml</h1><p>编辑<code>/docker/homeassistantconfiguration.yaml</code>在末尾加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sensor:</span><br><span class="line">  - platform: mqtt</span><br><span class="line">    state_topic: &quot;esp&#x2F;sensor1&quot;</span><br><span class="line">    name: &#39;Temperature&#39;</span><br><span class="line">    unit_of_measurement: &#39;°C&#39;</span><br><span class="line">    value_template: &#39;&#123;&#123; value_json.Temperature &#125;&#125;&#39;</span><br><span class="line">  - platform: mqtt</span><br><span class="line">    state_topic: &quot;esp&#x2F;sensor1&quot;</span><br><span class="line">    name: &#39;Humidity&#39;</span><br><span class="line">    unit_of_measurement: &#39;%&#39;</span><br><span class="line">    value_template: &#39;&#123;&#123; value_json.Humidity &#125;&#125;&#39;</span><br><span class="line">    device_class: humidity</span><br></pre></td></tr></table></figure><h1 id="esp8266程序"><a href="#esp8266程序" class="headerlink" title="esp8266程序"></a>esp8266程序</h1><p>将DHT22连接到NodeMCU的<code>D2</code>口也就是<code>IO4</code>上<br>烧写程序如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;PubSubClient.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;DHT.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTPIN 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTTYPE DHT22</span></span><br><span class="line"></span><br><span class="line"><span class="function">DHT <span class="title">dht</span><span class="params">(DHTPIN, DHTTYPE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update these with values suitable for your network.</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* mqtt_server = <span class="string">&quot;xxx.xxx.xxx.xxx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* mqtt_topic = <span class="string">&quot;esp/sensor1&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WiFiClient espClient;</span><br><span class="line"><span class="function">PubSubClient <span class="title">client</span><span class="params">(espClient)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  setup_wifi();</span><br><span class="line">  client.setServer(mqtt_server, <span class="number">1883</span>);</span><br><span class="line">  dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup_wifi</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  delay(<span class="number">10</span>);</span><br><span class="line">  <span class="comment">// We start by connecting to a WiFi network</span></span><br><span class="line">  Serial.println();</span><br><span class="line">  Serial.print(<span class="string">&quot;Connecting to &quot;</span>);</span><br><span class="line">  Serial.println(ssid);</span><br><span class="line"></span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) </span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reconnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Loop until we&#x27;re reconnected</span></span><br><span class="line">  <span class="keyword">while</span> (!client.connected()) &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;Attempting MQTT connection...&quot;</span>);</span><br><span class="line">    <span class="comment">// Attempt to connect</span></span><br><span class="line">    <span class="keyword">if</span> (client.connect(<span class="string">&quot;arduinoClient&quot;</span>)) &#123;</span><br><span class="line">    <span class="comment">//if (client.connect(&quot;arduinoClient&quot;, mqtt_user, mqtt_password)) &#123;</span></span><br><span class="line">      Serial.println(<span class="string">&quot;connected&quot;</span>);</span><br><span class="line">      <span class="comment">// Once connected, publish an announcement...</span></span><br><span class="line">      client.subscribe(<span class="string">&quot;esp/#&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;failed, rc=&quot;</span>);</span><br><span class="line">      Serial.print(client.state());</span><br><span class="line">      Serial.println(<span class="string">&quot; try again in 5 seconds&quot;</span>);</span><br><span class="line">      <span class="comment">// Wait 5 seconds before retrying</span></span><br><span class="line">      delay(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!client.connected()) &#123;</span><br><span class="line">reconnect();</span><br><span class="line">&#125;</span><br><span class="line">client.loop();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait a few seconds between measurements.</span></span><br><span class="line">delay(<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">float</span> h = dht.readHumidity();</span><br><span class="line"><span class="keyword">float</span> t = dht.readTemperature();</span><br><span class="line"><span class="keyword">if</span> (isnan(h) || isnan(t)) &#123;</span><br><span class="line">Serial.println(<span class="string">&quot;Failed to read from DHT sensor!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Serial.print(&quot;Humidity: &quot;);</span></span><br><span class="line"><span class="comment">//Serial.print(h);</span></span><br><span class="line"><span class="comment">//Serial.print(&quot; %\t&quot;);</span></span><br><span class="line"><span class="comment">//Serial.print(&quot;Temperature: &quot;);</span></span><br><span class="line"><span class="comment">//Serial.print(t);</span></span><br><span class="line"><span class="comment">//Serial.print(&quot; *C &quot;);</span></span><br><span class="line">  </span><br><span class="line">StaticJsonBuffer&lt;<span class="number">300</span>&gt; JSONbuffer;   <span class="comment">//Declaring static JSON buffer</span></span><br><span class="line">JsonObject&amp; JSONencoder = JSONbuffer.createObject(); </span><br><span class="line">JSONencoder[<span class="string">&quot;Humidity&quot;</span>] = h;</span><br><span class="line">JSONencoder[<span class="string">&quot;Temperature&quot;</span>] = t;</span><br><span class="line"><span class="comment">//JsonObject&amp; data = JSONencoder.createNestedObject(&quot;data&quot;);</span></span><br><span class="line"><span class="comment">//data.set(&quot;Humidity&quot;, h);</span></span><br><span class="line"><span class="comment">//data.set(&quot;Temperature&quot;, t);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> JSONmessageBuffer[<span class="number">300</span>];</span><br><span class="line">JSONencoder.prettyPrintTo(JSONmessageBuffer, <span class="keyword">sizeof</span>(JSONmessageBuffer));</span><br><span class="line">Serial.println(JSONmessageBuffer);</span><br><span class="line"></span><br><span class="line">boolean isOK = client.publish(mqtt_topic, JSONmessageBuffer, <span class="literal">true</span>);</span><br><span class="line">Serial.println(isOK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在<code>开发者工具/MQTT</code>中<br>订阅<code>主题Topic</code>为<code>esp/sensor1</code><br>注意监听</p><p>在主页面中右上角选择<code>配置UI</code><br>在右下角选择<code>添加卡片</code><br>在<code>实体</code>里选择<code>sensor.temperature</code>和<code>sensor.humidity</code><br>完成添加到主页</p><p>在iPhone的家庭APP里可以看到</p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>湿度传感器需要在修改homeassistantconfiguration.yaml的时候加入<code>device_class: humidity</code><br>Device Class支持的传感器类型有</p><blockquote><p>None: Generic sensor. This is the default and doesn’t need to be set.<br>battery: Percentage of battery that is left.<br>humidity: Percentage of humidity in the air.<br>illuminance: The current light level in lx or lm.<br>signal_strength: Signal strength in dB or dBm.<br>temperature: Temperature in °C or °F.<br>power: Power in W or kW.<br>pressure: Pressure in hPa or mbar.<br>timestamp: Datetime object or timestamp string.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;之前的工作看这里&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2020/03/03/%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BAHomeAssistant%E8%BF%9E%E6%8E%A5</summary>
      
    
    
    
    
    <category term="esp8266" scheme="http://danfei.github.io/tags/esp8266/"/>
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
    <category term="homeassistant" scheme="http://danfei.github.io/tags/homeassistant/"/>
    
    <category term="homekit" scheme="http://danfei.github.io/tags/homekit/"/>
    
    <category term="mqtt" scheme="http://danfei.github.io/tags/mqtt/"/>
    
    <category term="dht22" scheme="http://danfei.github.io/tags/dht22/"/>
    
  </entry>
  
  <entry>
    <title>Debian添加自动补全</title>
    <link href="http://danfei.github.io/2020/03/05/Debian%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/"/>
    <id>http://danfei.github.io/2020/03/05/Debian%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</id>
    <published>2020-03-05T05:36:08.000Z</published>
    <updated>2020-03-10T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装bash-completion</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install bash-completion</span><br></pre></td></tr></table></figure><p>编辑~/.bashrc 文件，添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ -f &#x2F;etc&#x2F;bash_completion ]; then</span><br><span class="line">. &#x2F;etc&#x2F;bash_completion</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>重新登录</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装bash-completion&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="DIY" scheme="http://danfei.github.io/tags/DIY/"/>
    
    <category term="debian" scheme="http://danfei.github.io/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>群晖搭建HomeAssistant连接HomeKit</title>
    <link href="http://danfei.github.io/2020/03/03/%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BAHomeAssistant%E8%BF%9E%E6%8E%A5HomeKit/"/>
    <id>http://danfei.github.io/2020/03/03/%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BAHomeAssistant%E8%BF%9E%E6%8E%A5HomeKit/</id>
    <published>2020-03-03T07:45:42.000Z</published>
    <updated>2020-03-03T14:37:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装HomeAssistant"><a href="#安装HomeAssistant" class="headerlink" title="安装HomeAssistant"></a>安装HomeAssistant</h1><p>在群晖Docker的注册表里搜索并下载<code>homeassistant/home-assistant</code><br>在<code>高级设置</code>里勾选<code>启动自动重新启动</code><br>在<code>卷</code>里设置<code>/docker/homeassistant</code>映射装载路径<code>/config</code><br>在<code>网络</code>里勾选<code>使用与Docker Host相同的网络</code><br>在<code>环境</code>里设置<code>TZ</code>数值为<code>Asia/Shanghai</code><br>浏览器访问<code>http://群晖的ip:8123</code>即可完成剩下的设置</p><p>添加HomeKit支持<br>编辑<code>/docker/homeassistantconfiguration.yaml</code>在末尾加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">homekit: </span><br></pre></td></tr></table></figure><p>末尾有空格</p><p>返回HomeAssistant页面，会收到HomeKit的配置代码<br>如果忘记了此代码，可以删除<code>.homekit.state</code>文件</p><h1 id="安装MQTT服务器"><a href="#安装MQTT服务器" class="headerlink" title="安装MQTT服务器"></a>安装MQTT服务器</h1><p>在群晖Docker的注册表里搜索并下载<code>ncarlier/mqtt</code><br>在<code>高级设置</code>里勾选<code>启动自动重新启动</code><br>在<code>网络</code>里勾选<code>使用与Docker Host相同的网络</code><br>完成设置<br>编辑<code>/docker/homeassistantconfiguration.yaml</code>在末尾加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mqtt:</span><br><span class="line">    broker: 192.168.1.110</span><br><span class="line">    discovery: true</span><br><span class="line">    discovery_prefix: homeassistant</span><br></pre></td></tr></table></figure><h1 id="烧写esp8266程序"><a href="#烧写esp8266程序" class="headerlink" title="烧写esp8266程序"></a>烧写esp8266程序</h1><p>基础设置参考这里<br>(<a href="https://randomnerdtutorials.com/how-to-install-esp8266-board-arduino-ide/">https://randomnerdtutorials.com/how-to-install-esp8266-board-arduino-ide/</a>)<br>此外安装库<code>PubSubClient</code><br>烧写程序如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;PubSubClient.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Update these with values suitable for your network.</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* mqtt_server = <span class="string">&quot;xxx.xxx.xxx.xxx&quot;</span>;</span><br><span class="line"></span><br><span class="line">WiFiClient espClient;</span><br><span class="line"><span class="function">PubSubClient <span class="title">client</span><span class="params">(espClient)</span></span>;</span><br><span class="line">String switch1;</span><br><span class="line">String strTopic;</span><br><span class="line">String strPayload;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup_wifi</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  delay(<span class="number">10</span>);</span><br><span class="line">  <span class="comment">// We start by connecting to a WiFi network</span></span><br><span class="line">  Serial.println();</span><br><span class="line">  Serial.print(<span class="string">&quot;Connecting to &quot;</span>);</span><br><span class="line">  Serial.println(ssid);</span><br><span class="line"></span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) </span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">callback</span><span class="params">(<span class="keyword">char</span>* topic, byte* payload, <span class="keyword">unsigned</span> <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">  payload[length] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  strTopic = String((<span class="keyword">char</span>*)topic);</span><br><span class="line">  <span class="keyword">if</span>(strTopic == <span class="string">&quot;esp/switch1&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    switch1 = String((<span class="keyword">char</span>*)payload);</span><br><span class="line">    <span class="keyword">if</span>(switch1 == <span class="string">&quot;ON&quot;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        Serial.println(<span class="string">&quot;ON&quot;</span>);</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        Serial.println(<span class="string">&quot;OFF&quot;</span>);</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reconnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Loop until we&#x27;re reconnected</span></span><br><span class="line">  <span class="keyword">while</span> (!client.connected()) &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;Attempting MQTT connection...&quot;</span>);</span><br><span class="line">    <span class="comment">// Attempt to connect</span></span><br><span class="line">    <span class="keyword">if</span> (client.connect(<span class="string">&quot;arduinoClient&quot;</span>)) &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;connected&quot;</span>);</span><br><span class="line">      <span class="comment">// Once connected, publish an announcement...</span></span><br><span class="line">      client.subscribe(<span class="string">&quot;esp/#&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;failed, rc=&quot;</span>);</span><br><span class="line">      Serial.print(client.state());</span><br><span class="line">      Serial.println(<span class="string">&quot; try again in 5 seconds&quot;</span>);</span><br><span class="line">      <span class="comment">// Wait 5 seconds before retrying</span></span><br><span class="line">      delay(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  setup_wifi(); </span><br><span class="line">  client.setServer(mqtt_server, <span class="number">1883</span>);</span><br><span class="line">  client.setCallback(callback);</span><br><span class="line"></span><br><span class="line">  pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">  digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!client.connected()) &#123;</span><br><span class="line">    reconnect();</span><br><span class="line">  &#125;</span><br><span class="line">  client.loop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>编辑<code>/docker/homeassistantconfiguration.yaml</code>在末尾加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">switch:</span><br><span class="line">  - platform: mqtt</span><br><span class="line">    name: &quot;light&quot;</span><br><span class="line">    state_topic: &quot;esp&#x2F;switch1&quot;</span><br><span class="line">    command_topic: &quot;esp&#x2F;switch1&quot;</span><br><span class="line">    payload_on: &quot;ON&quot;</span><br><span class="line">    payload_off: &quot;OFF&quot;</span><br></pre></td></tr></table></figure><p>在<code>开发者工具/MQTT</code>中<br>填写<code>主题Topic</code>为<code>esp/switch1</code><br>分别发送有效负载为<code>ON</code>或<code>OFF</code>进行测试<br>注意在客户端监听</p><p>在主页面中右上角选择<code>配置UI</code><br>在右下角选择<code>添加卡片</code><br>在<code>实体</code>里选择<code>switch.light</code><br>完成添加到主页</p><p>最后在iPhone的家庭APP里添加配件，简单配置后即可使用Siri控制开关</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><blockquote><p>(<a href="https://www.instructables.com/id/Using-an-Esp8266-Arduino-to-Control-a-Relay-Using-/">https://www.instructables.com/id/Using-an-Esp8266-Arduino-to-Control-a-Relay-Using-/</a>)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装HomeAssistant&quot;&gt;&lt;a href=&quot;#安装HomeAssistant&quot; class=&quot;headerlink&quot; title=&quot;安装HomeAssistant&quot;&gt;&lt;/a&gt;安装HomeAssistant&lt;/h1&gt;&lt;p&gt;在群晖Docker的注册表里搜索并下</summary>
      
    
    
    
    
    <category term="esp8266" scheme="http://danfei.github.io/tags/esp8266/"/>
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
    <category term="homeassistant" scheme="http://danfei.github.io/tags/homeassistant/"/>
    
    <category term="homekit" scheme="http://danfei.github.io/tags/homekit/"/>
    
    <category term="mqtt" scheme="http://danfei.github.io/tags/mqtt/"/>
    
  </entry>
  
  <entry>
    <title>用树莓派搭建群晖NVR</title>
    <link href="http://danfei.github.io/2020/02/28/%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E7%BE%A4%E6%99%96NVR/"/>
    <id>http://danfei.github.io/2020/02/28/%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E7%BE%A4%E6%99%96NVR/</id>
    <published>2020-02-27T17:37:51.000Z</published>
    <updated>2020-03-02T21:07:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>树莓派需要连接摄像头<br>烧写镜像后启动<br>记得将<code>/etc/apt/sources.list</code>文件中<br>默认的源地址<code>http://raspbian.raspberrypi.org/</code><br>替换为<code>http://mirrors.ustc.edu.cn/raspbian/</code><br>在<code>raspi-config</code>上开启shh和摄像头，同时登陆WiFi</p><h1 id="安装motion"><a href="#安装motion" class="headerlink" title="安装motion"></a>安装motion</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install motion</span><br></pre></td></tr></table></figure><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><p>添加守护进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano &#x2F;etc&#x2F;default&#x2F;motion</span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start_motion_daemon&#x3D;yes</span><br></pre></td></tr></table></figure><p>使其允许外部访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano &#x2F;etc&#x2F;motion&#x2F;motion.conf</span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stream_localhost off</span><br></pre></td></tr></table></figure><p>启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service motion start</span><br></pre></td></tr></table></figure><p>浏览器访问<code>http://xxx.xxx.xxx.xxx:8081</code><br>看到输出画面即为正常</p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>会有一些卡顿的情况，需要进一步调整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano &#x2F;etc&#x2F;motion&#x2F;motion.conf</span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">daemon on</span><br><span class="line">framerate 30</span><br><span class="line">ffmpeg_variable_bitrate  2</span><br><span class="line">stream_maxrate  30</span><br><span class="line">stream_quality  100</span><br><span class="line">output_pictures off</span><br><span class="line">ffmpeg_output_movies off</span><br></pre></td></tr></table></figure><p>重新启动之后，画面会流畅很多</p><h1 id="添加到群晖"><a href="#添加到群晖" class="headerlink" title="添加到群晖"></a>添加到群晖</h1><p>在群晖的套件中心安装<code>Surveillance Station</code>并激活<br>添加网络摄像头<br>品牌选择<code>用户自定义</code><br>类型选择<code>串流-HTTP</code><br>路径输入<code>xxx.xxx.xxx.xxx:8081</code><br>测试成功之后，此设备就可以作为监控摄像头使用，视频会自动存储在NAS上</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;树莓派需要连接摄像头&lt;br&gt;烧写镜像后启动&lt;br&gt;记得将&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;</summary>
      
    
    
    
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
    <category term="raspi" scheme="http://danfei.github.io/tags/raspi/"/>
    
  </entry>
  
  <entry>
    <title>草缸笔记</title>
    <link href="http://danfei.github.io/2020/02/27/%E8%8D%89%E7%BC%B8%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/02/27/%E8%8D%89%E7%BC%B8%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-27T15:29:05.000Z</published>
    <updated>2020-02-28T02:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h1><p>差不多是两年前看到了一段视频，非常吸引我<br><a href="https://www.youtube.com/watch?v=ZvmGJuquuLE&list=PL2155euLw9DN6EU2zBTlDj8-q572aZv7w&index=6">(Setting Up) NO filter, NO CO2, NO Ferts 5 Gallon Nano Tank</a><br>很想挖这个坑，但直到今天才开始着手，我会在这里记录我的操作</p><h1 id="器材准备"><a href="#器材准备" class="headerlink" title="器材准备"></a>器材准备</h1><ul><li>超白玻鱼缸1个（400mm宽/230mm深/250mm高，厚度4.8mm）</li><li>照明灯1盏（9W，390mm-540mm可调长度，灯珠5730，灯珠数36颗，蓝白光）</li><li>温度计（吸盘式，115mm长，范围0℃~40℃，误差±1℃）</li><li>黄沙（7kg，颗粒直径2mm~5mm）</li><li>种植土（6L，美乐棵通用性营养土）</li></ul><h1 id="操作记录"><a href="#操作记录" class="headerlink" title="操作记录"></a>操作记录</h1><h2 id="2020年2月27日"><a href="#2020年2月27日" class="headerlink" title="2020年2月27日"></a>2020年2月27日</h2><p>晚上收到了快递，把缸体清洗干净，放在了进门的柜子上</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;缘由&quot;&gt;&lt;a href=&quot;#缘由&quot; class=&quot;headerlink&quot; title=&quot;缘由&quot;&gt;&lt;/a&gt;缘由&lt;/h1&gt;&lt;p&gt;差不多是两年前看到了一段视频，非常吸引我&lt;br&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ZvmGJ</summary>
      
    
    
    
    
    <category term="DIY" scheme="http://danfei.github.io/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>搭建邮件服务器</title>
    <link href="http://danfei.github.io/2020/02/25/%E6%90%AD%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://danfei.github.io/2020/02/25/%E6%90%AD%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-02-25T15:36:31.000Z</published>
    <updated>2020-03-02T21:06:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="DNS服务器"><a href="#DNS服务器" class="headerlink" title="DNS服务器"></a>DNS服务器</h2><p>在域名的DNS管理页添加如下记录</p><table><thead><tr><th>Type</th><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>A</td><td>mail</td><td>xxx.xxx.xxx.xxx</td></tr><tr><td>MX</td><td>@</td><td>mail.xxx.com</td></tr></tbody></table><h2 id="公网服务器防火墙"><a href="#公网服务器防火墙" class="headerlink" title="公网服务器防火墙"></a>公网服务器防火墙</h2><p>首先查看防火墙端口状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ufw status</span><br></pre></td></tr></table></figure><p>然后开放如下端口</p><table><thead><tr><th align="left">名称</th><th align="left">协议</th><th align="left">端口号</th></tr></thead><tbody><tr><td align="left">SMTP</td><td align="left">TCP</td><td align="left">25</td></tr><tr><td align="left">IMAP</td><td align="left">TCP</td><td align="left">143</td></tr><tr><td align="left">POP3</td><td align="left">TCP</td><td align="left">110</td></tr><tr><td align="left">SMTP-SSL</td><td align="left">TCP</td><td align="left">465</td></tr><tr><td align="left">SMTP-TLS</td><td align="left">TCP</td><td align="left">587</td></tr><tr><td align="left">通过 SSL/TLS 的 IMAP</td><td align="left">TCP</td><td align="left">993</td></tr><tr><td align="left">通过 SSL/TLS 的 POP3</td><td align="left">TCP</td><td align="left">995</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ufw allow 端口号</span><br></pre></td></tr></table></figure><h2 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h2><p>在公网服务器frps的配置文件<code>frps.ini</code>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">subdomain_host &#x3D; xxx.com </span><br></pre></td></tr></table></figure><p>在家里的软路由frpc内添加添加对应的远程端口和TCP协议<br>内容与上面的防火墙设置一样<br>此外添加二级域名的代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mail]</span><br><span class="line">type &#x3D; http</span><br><span class="line">local_port &#x3D; 80 </span><br><span class="line">subdomain &#x3D; mail </span><br></pre></td></tr></table></figure><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>邮件的Web客户端也需要用80端口，但由于公网服务器上Nginx已经占用了80端口<br>所以我们修改Nginx配置，在二级域名mail上让nginx转发80流量到frp的8080端口<br>添加<code>frp.conf</code>，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name mail.xxx.com;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:8080;</span><br><span class="line">        proxy_set_header    Host            $host:80;</span><br><span class="line">        proxy_set_header    X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_hide_header   X-Powered-By;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name mail.xxx.com;</span><br><span class="line"></span><br><span class="line">    # ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;mail.xxx.com&#x2F;fullchain.pem;</span><br><span class="line">    ssl_certificate_key &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;mail.xxx.com&#x2F;privkey.pem;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_session_timeout 60m;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:8081;</span><br><span class="line">        proxy_set_header    Host            $host:80;</span><br><span class="line">        proxy_set_header    X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_hide_header   X-Powered-By;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="邮件服务器安装"><a href="#邮件服务器安装" class="headerlink" title="邮件服务器安装"></a>邮件服务器安装</h1><p>群晖套件中心安装<code>Mail Server</code><br>启用SMTP，填写主机名<code>xxx.com</code><br>启用SMTP-SSL，启用SMTP-TLS</p><h1 id="测试使用"><a href="#测试使用" class="headerlink" title="测试使用"></a>测试使用</h1><p>群晖套件中心安装<code>Mail Station</code><br>访问地址为<code>http://mail.xxx.com/mail</code><br>使用其他邮箱互发邮件<br>It Works！</p><h1 id="使用群晖MailPlus套件"><a href="#使用群晖MailPlus套件" class="headerlink" title="使用群晖MailPlus套件"></a>使用群晖MailPlus套件</h1><p>此软件免费授权只有5个帐号<br>胜在Web端UI精致，还有APP供选择<br>改用此套件，服务器端设置基本相同<br>需要注意的是</p><h2 id="DSM设置"><a href="#DSM设置" class="headerlink" title="DSM设置"></a>DSM设置</h2><p>Web客户端访问地址需要打开<br>在<code>控制面板</code>中打开<code>应用程序门户</code><br>选择<code>MailPlus</code>，启用自定义别名<code>mail</code>，就可以通过如下地址直接访问<br><code>https://xxx.xxx.xxx.xxx/mail</code></p><h2 id="frpc修改"><a href="#frpc修改" class="headerlink" title="frpc修改"></a>frpc修改</h2><p>修改二级域名mail的参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mail]</span><br><span class="line">type &#x3D; http</span><br><span class="line">local_port &#x3D; 5000 </span><br><span class="line">subdomain &#x3D; mail</span><br></pre></td></tr></table></figure><h2 id="Nginx-1"><a href="#Nginx-1" class="headerlink" title="Nginx"></a>Nginx</h2><p>将<code>mail.xxx.com</code>的地址重定向到<code>mail.xxx.com/mail</code>便于访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line">    server_name mail.hack42.com;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:8080;</span><br><span class="line">        proxy_set_header    Host            $host:80;</span><br><span class="line">        proxy_set_header    X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_hide_header   X-Powered-By;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name mail.hack42.com;</span><br><span class="line"></span><br><span class="line">    if ($host &#x3D; &#39;mail.hack42.com&#39; ) &#123;</span><br><span class="line">     rewrite ^&#x2F;(.*)$ http:&#x2F;&#x2F;mail.hack42.com&#x2F;mail;</span><br><span class="line">        &#125;</span><br><span class="line">    # ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;mail.hack42.com&#x2F;fullchain.pem; # managed by Certbot</span><br><span class="line">    ssl_certificate_key &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;mail.hack42.com&#x2F;privkey.pem; # managed by Certbot</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_session_timeout 60m;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:8080;</span><br><span class="line">        proxy_set_header    Host            $host:80;</span><br><span class="line">        proxy_set_header    X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_hide_header   X-Powered-By;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外，记得签发二级域名的证书</p><p>访问地址为<code>http://mail.xxx.com/</code><br>It Works！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;h2 id=&quot;DNS服务器&quot;&gt;&lt;a href=&quot;#DNS服务器&quot; class=&quot;headerlink&quot; title=&quot;DNS服务</summary>
      
    
    
    
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
    <category term="frp" scheme="http://danfei.github.io/tags/frp/"/>
    
    <category term="server" scheme="http://danfei.github.io/tags/server/"/>
    
    <category term="nginx" scheme="http://danfei.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>frp笔记</title>
    <link href="http://danfei.github.io/2020/02/24/frp%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/02/24/frp%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-24T08:42:15.000Z</published>
    <updated>2020-03-02T21:28:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>经常需要开放Docker或是虚拟机部署的服务到互联网<br>就会用到内网穿透的反向代理</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li>客户端与服务器端版本号对齐</li><li>启动时注意权限</li></ul><h1 id="以minetest为例"><a href="#以minetest为例" class="headerlink" title="以minetest为例"></a>以minetest为例</h1><h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><p>下载并解压<br><a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a><br>编辑配置文件<code>frps.ini</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 7000</span><br><span class="line">vhost_http_port &#x3D; 8080</span><br><span class="line">vhost_https_port &#x3D; 8081</span><br><span class="line">token &#x3D; r6aJRnN8cGyYMmb7A</span><br><span class="line"></span><br><span class="line">dashboard_port &#x3D; 7500</span><br><span class="line">dashboard_user &#x3D; username</span><br><span class="line">dashboard_pwd &#x3D; password</span><br></pre></td></tr></table></figure><ul><li>token需要和客户端匹配<br>启动服务<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo .&#x2F;frps -c frps.ini</span><br></pre></td></tr></table></figure>客户端</li></ul><hr><p>客户端我用的是OpenWrt软件库里的frpc<br>是web界面的配置方法，其实也就是配置了<code>frpc.ini</code><br>全局设置</p><ul><li>服务器地址</li><li>服务器端口7000</li><li>令牌r6aJRnN8cGyYMmb7A<br>因为minetest是使用本地30000端口进行udp通讯的<br>所以frpc上添加了一项服务</li><li>服务名称minetest</li><li>服务协议udp</li><li>远程端口 30000</li><li>内网主机192.168.1.110</li><li>内网主机端口30000</li></ul><p><code>frpc.ini</code>近似配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 服务器地址</span><br><span class="line">server_port &#x3D; 7000</span><br><span class="line">token &#x3D; r6aJRnN8cGyYMmb7A</span><br><span class="line"></span><br><span class="line">[minetest]</span><br><span class="line">type &#x3D; udp</span><br><span class="line">local_ip &#x3D; 192.168.1.110</span><br><span class="line">local_port &#x3D; 30000</span><br><span class="line">remote_port &#x3D; 30000</span><br></pre></td></tr></table></figure><p>工作状态也可以通过服务器的7500端口查看<code>dashboard</code>确认</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;经常需要开放Docker或是虚拟机部署的服务到互联网&lt;br&gt;就会用到内网穿透的反向代理&lt;/p&gt;
&lt;h1 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;客户端与服</summary>
      
    
    
    
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
    <category term="minetest" scheme="http://danfei.github.io/tags/minetest/"/>
    
    <category term="frp" scheme="http://danfei.github.io/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>NAS笔记</title>
    <link href="http://danfei.github.io/2020/02/23/NAS%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/02/23/NAS%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-23T02:22:15.000Z</published>
    <updated>2020-03-04T08:01:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="硬件选择工作"><a href="#硬件选择工作" class="headerlink" title="硬件选择工作"></a>硬件选择工作</h1><h2 id="NAS选择"><a href="#NAS选择" class="headerlink" title="NAS选择"></a>NAS选择</h2><p>选择群晖主要是为了易用和稳定，毕竟是用来备份资料的设备<br>个人认为群晖适合家用的两个型号:两盘位的<code>DS218+</code>和四盘位的<code>DS918+</code><br>plus系列最大特点是支持Docker，这个很重要<br>需要体积小巧就选前者，需要海量存储就选择后者<br>我购买的是DS218+</p><h2 id="加装内存"><a href="#加装内存" class="headerlink" title="加装内存"></a>加装内存</h2><p>为了更好地使用Docker，务必选择加装内存，当然过大也没啥用<br>注意是低电压版本的<code>DDR3L 1866</code>的内存<br>我购买的是8GB容量</p><h2 id="硬盘选择"><a href="#硬盘选择" class="headerlink" title="硬盘选择"></a>硬盘选择</h2><p>硬盘有NAS专用盘<br>容量方面可以参考单位容量单价比较<br>即用该<code>硬盘总价/硬盘容量</code><br>可以做出性价比不错的选择<br>我购买的是希捷的4TB*2</p><h2 id="UPS选择"><a href="#UPS选择" class="headerlink" title="UPS选择"></a>UPS选择</h2><p>虽然有各类保护，但突然掉电对硬盘还是有一定影响<br>购买UPS可以避免这一点<br>小型的UPS不占地方，大约能提供几十分钟的电力支援<br>我购买的是<code>APC施耐德BK650-CH(400W/650VA)</code></p><h2 id="其他设备"><a href="#其他设备" class="headerlink" title="其他设备"></a>其他设备</h2><ul><li>配合电视机，可以购买支持DLNA播放的视频盒子，Apple TV、小米盒子或者Raspberry Pi刷了OSMC都可以</li><li>尽管群晖也可以来做软路由，我还是倾向于有一块OpenWrt无线路由，ASUS RT-AC88U之类</li><li>可以买99元的花生棒做内网穿透，便于更灵活的使用</li><li>防尘问题可以将机器拆开，在风扇处加装防尘网，并把风扇反置</li></ul><h1 id="软件选择"><a href="#软件选择" class="headerlink" title="软件选择"></a>软件选择</h1><h2 id="照片备份"><a href="#照片备份" class="headerlink" title="照片备份"></a>照片备份</h2><p>套件中心中启用<code>Moments</code>，手机上安装Moments APP<br>家中每人可以用各自的帐号备份自己设备的照片<br>同时将部分照片共享出来，建立共享照片库</p><h2 id="影音下载"><a href="#影音下载" class="headerlink" title="影音下载"></a>影音下载</h2><p>在Docker中注册表搜索<code>oldiy/rrshare64</code><br>把映像建立容器，配置下载路径后即可使用<br>它提供海量的人人影视翻译的视频下载，不用到处找资源</p><h2 id="媒体中心"><a href="#媒体中心" class="headerlink" title="媒体中心"></a>媒体中心</h2><p>套件中心中启用<code>Plex Media Server</code><br>下载后的视频移动到对应目录就可以自动扫描出影片信息<br>注意放置的位置<br>电影<br><code>/Media/Movies/Apollo.11/Apollo.11.mp4</code><br>电视剧<br><code>/Media/TV Shows/Better.Call.Saul/Season 01/Better.Call.Saul.S01E01.mp4</code><br>移动端推荐使用Plex APP或是VLC APP<br>电视机连接媒体盒子后，可以直接搜索出DLNA设备播放</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>在Docker Hub海量资源有很多可以探索的<br>我使用<code>linuxserver/minetest</code>搭建了minetest游戏服务器<br>配合路由上的frps做内网穿透，让我社区的朋友可以一起游玩<br>因为负载不大，所以还算流畅</p><h2 id="Virtual-Machine-Manager"><a href="#Virtual-Machine-Manager" class="headerlink" title="Virtual Machine Manager"></a>Virtual Machine Manager</h2><p>在<code>Virtual Machine Manager</code>可以创建需要的虚拟机<br>我在上面建立过魔兽世界3.3.5版本的<code>TrinityCore</code>服务器，但是在线三个人就开始卡顿<br>如果服务器性能再强一些，支持五人在线游戏就不错</p><h2 id="同步与备份"><a href="#同步与备份" class="headerlink" title="同步与备份"></a>同步与备份</h2><p>安装<code>Synology Drive</code>的客户端来同步PC上的文件到服务器<br>使用<code>Snapshot Replication</code>来建立备份快照<br>如果你有两台群晖，或者花了300元买到了星际蜗牛<br>你还可以运行<code>Hyper Backup</code>做异地备份，充分保护你的数据安全</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;硬件选择工作&quot;&gt;&lt;a href=&quot;#硬件选择工作&quot; class=&quot;headerlink&quot; title=&quot;硬件选择工作&quot;&gt;&lt;/a&gt;硬件选择工作&lt;/h1&gt;&lt;h2 id=&quot;NAS选择&quot;&gt;&lt;a href=&quot;#NAS选择&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="synology" scheme="http://danfei.github.io/tags/synology/"/>
    
  </entry>
  
  <entry>
    <title>Hexo笔记</title>
    <link href="http://danfei.github.io/2020/02/22/Hexo%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/02/22/Hexo%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-22T07:33:41.000Z</published>
    <updated>2020-03-02T21:25:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>安装nodejs和hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nodejs</span><br><span class="line">$ sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>其他就是配置github帐号等等</p><p>初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>如果是是用新的电脑写作，记得保存如下文件/文件夹</p><ul><li>_config.yml</li><li>source</li><li>themes</li></ul><h1 id="修改配置文档"><a href="#修改配置文档" class="headerlink" title="修改配置文档"></a>修改配置文档</h1><p>网站的配置文档在<code>/_config.yml</code><br>主题的配置文件在<code>/themes/_config.yml</code><br>文件内都有详细的修改说明<br>如果需要在文章内配图，可以修改网站配置文档的<code>post_asset_folder</code>参数<br>这样可以在<code>source/_posts</code>内随文章建立同名的文件夹<br>文章内可直接引用链接地址“文章名/文件名”</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>文章写作时注意Markdown语法<br>新建文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new ‘文章名’</span><br></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>本地预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>更新部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;安装nodejs和hexo&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    
    <category term="github" scheme="http://danfei.github.io/tags/github/"/>
    
    <category term="hexo" scheme="http://danfei.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Vultr笔记</title>
    <link href="http://danfei.github.io/2020/02/21/Vultr%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2020/02/21/Vultr%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-21T06:24:13.000Z</published>
    <updated>2020-03-02T21:17:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="部署实例"><a href="#部署实例" class="headerlink" title="部署实例"></a>部署实例</h1><p>需要注意的地方有</p><ul><li>创建后测试服务器ip，注意是否屏蔽、延迟及丢包率</li><li>以上三项达不到要求就重新部署新的服务器</li><li>创建新的之后再销毁旧的，否则有可能获得相同的ip</li></ul><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><p>我使用的是Ubuntu18.04，后台提供了root密码<br>putty登陆后，先创建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># adduser username</span><br></pre></td></tr></table></figure><p>然后添加权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># nano &#x2F;etc&#x2F;sudoers</span><br></pre></td></tr></table></figure><p>增加一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username ALL&#x3D;(ALL：ALL) ALL</span><br></pre></td></tr></table></figure><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>方便起见，可以在Godaddy上买个域名<br>在域名的DNS设置页面将A记录指向服务器ip</p><h1 id="添加证书"><a href="#添加证书" class="headerlink" title="添加证书"></a>添加证书</h1><p>使用<code>certbot</code>申请let’s encrypt证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install certbot python-certbot-nginx</span><br><span class="line">$ sudo certbot --nginx</span><br></pre></td></tr></table></figure><p>证书到期后续约</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo certbot renew –dry-run</span><br></pre></td></tr></table></figure><p>编辑nginx配置，将http重定向到https</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;http.conf</span><br></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name example.com www.example.com;</span><br><span class="line">  return 301 https:&#x2F;&#x2F;example.com$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>https相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;https.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name example.com www.example.com;</span><br><span class="line">    ssl_certificate      &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;xxx.com&#x2F;fullchain.pem;</span><br><span class="line">    ssl_certificate_key  &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;xxx.com&#x2F;privkey.pem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启nginx即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo server nginx restart</span><br></pre></td></tr></table></figure><h1 id="CDN加速"><a href="#CDN加速" class="headerlink" title="CDN加速"></a>CDN加速</h1><ol><li>在Cloudflare注册并添加域名</li><li>在Godaddy上修改Nameservers</li><li>开启Always use HTTPS<br>至此，测试网站的延迟从100ms左右下降到了60ms左右</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;部署实例&quot;&gt;&lt;a href=&quot;#部署实例&quot; class=&quot;headerlink&quot; title=&quot;部署实例&quot;&gt;&lt;/a&gt;部署实例&lt;/h1&gt;&lt;p&gt;需要注意的地方有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建后测试服务器ip，注意是否屏蔽、延迟及丢包率&lt;/li&gt;
&lt;li&gt;以上三项达不</summary>
      
    
    
    
    
    <category term="vultr" scheme="http://danfei.github.io/tags/vultr/"/>
    
  </entry>
  
  <entry>
    <title>Arduino Micro笔记</title>
    <link href="http://danfei.github.io/2018/05/12/ArduinoMicro%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2018/05/12/ArduinoMicro%E7%AC%94%E8%AE%B0/</id>
    <published>2018-05-12T13:57:00.000Z</published>
    <updated>2020-03-03T04:43:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Uno的pin2和pin3是interrupt 0和1<br>基于32u4的刚好反过来<br>pin2和pin3是interrupt 1和0<br>瞎忙活半天</p><blockquote><p>参考<br><a href="https://www.arduino.cc/reference/en/language/functions/external-interrupts/attachinterrupt/">https://www.arduino.cc/reference/en/language/functions/external-interrupts/attachinterrupt/</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Uno的pin2和pin3是interrupt 0和1&lt;br&gt;基于32u4的刚好反过来&lt;br&gt;pin2和pin3是interrupt 1和0&lt;br&gt;瞎忙活半天&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;https://www.arduino.cc</summary>
      
    
    
    
    
    <category term="arduino" scheme="http://danfei.github.io/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>Django笔记</title>
    <link href="http://danfei.github.io/2017/09/10/Django%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2017/09/10/Django%E7%AC%94%E8%AE%B0/</id>
    <published>2017-09-10T08:53:38.000Z</published>
    <updated>2020-03-02T21:30:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="It-worked！"><a href="#It-worked！" class="headerlink" title="It worked！"></a>It worked！</h1><p>安装pip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo apt-get install python3-pip</span><br></pre></td></tr></table></figure><p>安装虚拟机环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo apt-get install virtualenv</span><br></pre></td></tr></table></figure><p>创建虚拟机环境并启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$virtualenv VENV</span><br><span class="line">$source VENV&#x2F;bin&#x2F;activate</span><br></pre></td></tr></table></figure><p>安装Django</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(VENV)$pip install django</span><br></pre></td></tr></table></figure><p>新建一个项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(VENV)$django-admin startproject iot</span><br></pre></td></tr></table></figure><p>进入项目并修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(VENV)$cd iot</span><br><span class="line">(VENV)$nano iot&#x2F;settings.py</span><br></pre></td></tr></table></figure><p>添加允许访问位置和修改时区设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALLOWED_HOSTS &#x3D; [&quot;192.168.1.128&quot;,&quot;localhost&quot;]</span><br><span class="line">TIME_ZONE &#x3D; &#39;Asia&#x2F;Shanghai&#39;</span><br></pre></td></tr></table></figure><p>测试运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(VENV)$python manage.py runserver localhost:8000</span><br></pre></td></tr></table></figure><h1 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h1><p>修改配置文件<code>setting.py</code><br>在<code>INSTALLED_APPS</code>中加入<br><code>django_crontab</code><br>文件中加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CRONJOBS &#x3D; [</span><br><span class="line">(&#39;*&#x2F;1 * * * *&#39;, &#39;power.cron.poweron&#39;, &#39;&gt;&gt;&#x2F;tmp&#x2F;job.log&#39;),</span><br><span class="line">]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">在power目录下创建cron.py文件</span><br><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">from .models import Power</span><br><span class="line"></span><br><span class="line">def poweron():</span><br><span class="line">#here</span><br></pre></td></tr></table></figure><p>任务加载<br><code>python manage.py crontab add</code><br>移除所有的任务<br><code>python manage.py crontab remove</code><br>修改后再次运行<br><code>python manage.py crontab add</code><br>查看当前运行中的任务<br><code>python manage.py crontab show</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;It-worked！&quot;&gt;&lt;a href=&quot;#It-worked！&quot; class=&quot;headerlink&quot; title=&quot;It worked！&quot;&gt;&lt;/a&gt;It worked！&lt;/h1&gt;&lt;p&gt;安装pip&lt;/p&gt;
&lt;figure class=&quot;highlight pla</summary>
      
    
    
    
    
    <category term="web" scheme="http://danfei.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Raspberry Pi 笔记</title>
    <link href="http://danfei.github.io/2017/04/07/Raspberrypi%E7%AC%94%E8%AE%B0/"/>
    <id>http://danfei.github.io/2017/04/07/Raspberrypi%E7%AC%94%E8%AE%B0/</id>
    <published>2017-04-07T02:44:22.000Z</published>
    <updated>2020-03-02T21:15:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h1><p>获取Kernel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$git clone --depth&#x3D;1 https:&#x2F;&#x2F;github.com&#x2F;raspberrypi&#x2F;linux</span><br></pre></td></tr></table></figure><p>获取交叉编译工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo apt-get install gcc-arm-linux-gnueabihf</span><br></pre></td></tr></table></figure><p>进入目录设定编译选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$cd linux</span><br><span class="line">$make -j4 ARCH&#x3D;arm CROSS_COMPILE&#x3D;arm-linux-gnueabihf- bcm2709_defconfig</span><br></pre></td></tr></table></figure><p>参数<code>bcm2709_defconfig</code>是Raspberry Pi2/3代，1代使用<code>bcmrpi_defconfig</code><br>j4是使用4核心来编译，建议改为核心数的1.5倍<br>然后开始编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$make -j4 ARCH&#x3D;arm CROSS_COMPILE&#x3D;arm-linux-gnueabihf- zImage modules dtbs</span><br></pre></td></tr></table></figure><p>编译需要一段时间<br>完成之后插入烧写好raspbian系统的TF卡，安装modules</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo make ARCH&#x3D;arm CROSS_COMPILE&#x3D;arm-linux-gnueabihf- INSTALL_MOD_PATH&#x3D;&#x2F;media&#x2F;dan&#x2F;7f593562-9f68-4bb9-a7c9-2b70ad620873&#x2F; modules_install</span><br></pre></td></tr></table></figure><p><code>INSTALL_MOD_PATH</code>后面的路径改为本机路径<br>可以选择覆盖掉原来的Kernel或者放置多个kernel以便切换<br>然后拷贝<code>Kernel</code>和<code>Device Tree blobs</code>到TF卡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$sudo cp arch&#x2F;arm&#x2F;boot&#x2F;zImage &#x2F;media&#x2F;dan&#x2F;boot&#x2F;kernel-new.img</span><br><span class="line">$sudo cp arch&#x2F;arm&#x2F;boot&#x2F;dts&#x2F;*.dtb &#x2F;media&#x2F;dan&#x2F;boot&#x2F;</span><br><span class="line">$sudo cp arch&#x2F;arm&#x2F;boot&#x2F;dts&#x2F;overlays&#x2F;*.dtb* &#x2F;media&#x2F;dan&#x2F;boot&#x2F;overlays&#x2F;</span><br><span class="line">$sudo cp arch&#x2F;arm&#x2F;boot&#x2F;dts&#x2F;overlays&#x2F;README &#x2F;media&#x2F;dan&#x2F;boot&#x2F;overlays&#x2F;</span><br></pre></td></tr></table></figure><p>如果没有覆盖Kernel的话，还需要编辑<code>/boot/config.txt</code>加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kernel&#x3D;kernel-new.img</span><br></pre></td></tr></table></figure><p>编译就完成了</p><h1 id="更换logo和启动画面"><a href="#更换logo和启动画面" class="headerlink" title="更换logo和启动画面"></a>更换logo和启动画面</h1><h2 id="logo"><a href="#logo" class="headerlink" title="logo"></a>logo</h2><p>安装图形工具<code>netpbm</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo apt-get install -y netpbm</span><br></pre></td></tr></table></figure><p>准备一张63×80像素用于替换的logo.jpg<br>然后生成<code>logo_linux_clut224.ppm</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$cd ~&#x2F;linux&#x2F;drivers&#x2F;video&#x2F;logo</span><br><span class="line">$jpegtopnm logo.jpg &gt;logo.ppm</span><br><span class="line">$ppmquant 224 logo.ppm &gt;logo_224.tmp</span><br><span class="line">$pnmnoraw logo_224.tmp &gt; logo_linux_clut224.ppm</span><br></pre></td></tr></table></figure><p>在交叉编译之前，确保开机logo是224色设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j4 ARCH&#x3D;arm CROSS_COMPILE&#x3D;arm-linux-gnueabihf- menuconfig</span><br></pre></td></tr></table></figure><p>位置在</p><blockquote><ol><li>Device Drivers —&gt;</li><li>Graphics support —&gt;</li><li>[*] Bootup logo —&gt;</li><li>— Bootup logo<br>[ ] Standard black and white Linux logo<br>[ ] Standard 16-color Linux logo<br>[*] Standard 224-color Linux logo</li></ol></blockquote><p>后续开始编译，步骤同上</p><h2 id="启动画面"><a href="#启动画面" class="headerlink" title="启动画面"></a>启动画面</h2><p>安装看图工具<code>fbi</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo apt-get install fbi</span><br></pre></td></tr></table></figure><p>拷贝图片并保存到<code>/etc/splash.jpg</code><br>在TF卡的<code>/etc/init.d/</code>下创建新脚本<code>asplashscreen</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo nano &#x2F;etc&#x2F;init.d&#x2F;asplashscreen</span><br></pre></td></tr></table></figure><p>内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;bin&#x2F;sh</span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides:          asplashscreen</span><br><span class="line"># Required-Start:</span><br><span class="line"># Required-Stop:</span><br><span class="line"># Should-Start:      </span><br><span class="line"># Default-Start:     S</span><br><span class="line"># Default-Stop:</span><br><span class="line"># Short-Description: Show custom splashscreen</span><br><span class="line"># Description:       Show custom splashscreen</span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">do_start () &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;usr&#x2F;bin&#x2F;fbi -T 1 -noverbose -a &#x2F;etc&#x2F;splash.jpg</span><br><span class="line">    exit 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">  start|&quot;&quot;)</span><br><span class="line">    do_start</span><br><span class="line">    ;;</span><br><span class="line">  restart|reload|force-reload)</span><br><span class="line">    echo &quot;Error: argument &#39;$1&#39; not supported&quot; &gt;&amp;2</span><br><span class="line">    exit 3</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    # No-op</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    exit 0</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    echo &quot;Usage: asplashscreen [start|stop]&quot; &gt;&amp;2</span><br><span class="line">    exit 3</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">:</span><br></pre></td></tr></table></figure><p>保存之后，设置文件执行属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo chmod a+x &#x2F;etc&#x2F;init.d&#x2F;asplashscreen</span><br></pre></td></tr></table></figure><p>最后将脚本加入服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo insserv &#x2F;etc&#x2F;init.d&#x2F;asplashscreen</span><br></pre></td></tr></table></figure><p>结束</p><h1 id="屏蔽开机信息"><a href="#屏蔽开机信息" class="headerlink" title="屏蔽开机信息"></a>屏蔽开机信息</h1><p>打开<code>/boot/cmdline.txt</code><br>修改<code>console=tty1</code> 为 <code>console=tty3</code><br>结尾增改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logo.nologo loglevel&#x3D;3 vt.global_cursor_default&#x3D;0</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;编译内核&quot;&gt;&lt;a href=&quot;#编译内核&quot; class=&quot;headerlink&quot; title=&quot;编译内核&quot;&gt;&lt;/a&gt;编译内核&lt;/h1&gt;&lt;p&gt;获取Kernel&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="raspi" scheme="http://danfei.github.io/tags/raspi/"/>
    
  </entry>
  
</feed>
